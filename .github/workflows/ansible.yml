name: Terraform-Ansible-Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1 - Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2 - Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # Step 3 - Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # change if your region is different

      # Step 4 - Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: terraform-ec2

      # Step 5 - Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform-ec2

      # Step 6 - Terraform Plan
      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform-ec2

      # Step 7 - Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform-ec2

      # Step 8 - Get EC2 Public IP (CLEAN EXPORT)
      - name: Get EC2 Public IP
        id: ec2
        run: |
          ip=$(terraform output -raw ec2_public_ip)
          echo "EC2_IP=$ip" >> $GITHUB_ENV
        working-directory: terraform-ec2

      # Step 9 - Debug (print the IP to logs)
      - name: Show EC2 IP
        run: echo "Public IP is ${{ env.EC2_IP }}"

      # Step 10 - Setup SSH Key
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deployer.pem
          chmod 600 ~/.ssh/deployer.pem

      # Step 11 - Install Ansible
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      # Step 12 - Generate Ansible Inventory
      - name: Generate Ansible Inventory
        run: |
          echo "[all]" > inventory.ini
          echo "ec2-instance ansible_host=${{ env.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/deployer.pem" >> inventory.ini
          echo "[all:vars]" >> inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          cat inventory.ini

      # Step 13 - Run Ansible Playbook
      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini playbooks/deploy_containers.yml
