name: Ansible 

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-ansible]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout Ansible repo
      - name: Checkout Ansible repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Checkout Terraform repo
      - name: Checkout Terraform repo
        uses: actions/checkout@v4
        with:
          repository: Dency-28/Tf-den
          path: Tf-den

      # 3Ô∏è‚É£ Setup SSH key for EC2
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOYER_NEW }}" > ~/.ssh/deployer.pem
          chmod 600 ~/.ssh/deployer.pem

      # 4Ô∏è‚É£ Disable strict host key checking
      - name: Disable host key checking
        run: |
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          chmod 600 ~/.ssh/config

      # 5Ô∏è‚É£ Install Terraform & updated Ansible
      - name: Install Terraform & Ansible
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip curl software-properties-common
          # Install latest Ansible
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt-get install -y ansible
          # Install Terraform
          curl -fsSL https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip -o terraform.zip
          sudo unzip -o terraform.zip -d /usr/local/bin/   # ‚úÖ -o forces overwrite

      # 6Ô∏è‚É£ Initialize Terraform and fetch EC2 IP dynamically
      - name: Get EC2 Public IP from Terraform
        id: tfoutput
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          cd Tf-den/terraform_infra
          terraform init -input=false
          terraform plan -input=false
          terraform apply -auto-approve
          terraform output -raw ec2_public_ip > ec2_ip.txt
          echo "EC2_IP=$(cat ec2_ip.txt)" >> $GITHUB_ENV
          echo "‚úÖ Terraform EC2 IP: $(cat ec2_ip.txt)"

      # 7Ô∏è‚É£ Print IP for debug
      - name: Print EC2 IP
        run: echo "üåê EC2 IP is $EC2_IP"

      # 8Ô∏è‚É£ Generate dynamic Ansible inventory
      - name: Generate dynamic inventory
        run: |
          echo "[all]" > inventory.ini
          echo "ec2-instance ansible_host=$EC2_IP ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/deployer.pem" >> inventory.ini
          echo "" >> inventory.ini
          echo "[all:vars]" >> inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          echo "‚úÖ Inventory created:"
          cat inventory.ini

      # 9Ô∏è‚É£ Test Ansible connectivity
      - name: Test Ansible connectivity
        run: ansible all -i inventory.ini -m ping

      # üîü Run Ansible Playbooks sequentially
      - name: Run Ansible Playbooks
        run: |
          ansible-playbook -i inventory.ini Playbooks/install_dependencies.yml
          ansible-playbook -i inventory.ini Playbooks/configure_nginx.yml
          ansible-playbook -i inventory.ini Playbooks/deploy_containers.yml
          ansible-playbook -i inventory.ini Playbooks/env_and_ssl.yml
          ansible-playbook -i inventory.ini Playbooks/rolling_update.yml
