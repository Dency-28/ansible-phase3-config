name: Ansible-Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3. Setup SSH Key
      - name: Setup SSH Key
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > $HOME/.ssh/deployer.pem
          chmod 600 $HOME/.ssh/deployer.pem

      # 4. Install Ansible
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      # 5. Generate dynamic Ansible inventory from AWS
      - name: Generate Dynamic Inventory
        run: |
          INSTANCE_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=Tf-Demo-EC2" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          if [ -z "$INSTANCE_IP" ]; then
            echo "Error: Could not fetch EC2 public IP"
            exit 1
          fi
          echo "[all]" > inventory.ini
          echo "ec2-instance ansible_host=$INSTANCE_IP ansible_user=ec2-user ansible_ssh_private_key_file=$HOME/.ssh/deployer.pem" >> inventory.ini
          echo "[all:vars]" >> inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          cat inventory.ini

      # 6. Run Ansible Playbook
      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini Playbooks/deploy_containers.yml
