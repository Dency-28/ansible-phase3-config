name: Ansible Deploy

on:
  push:
    branches: 
      - main
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-ansible]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout current repo (Ansible)
      - name: Checkout Ansible repo
        uses: actions/checkout@v4

      # 2️⃣ Checkout Terraform repo
      - name: Checkout Terraform repo
        uses: actions/checkout@v4
        with:
          repository: Dency-28/Tf-den
          path: Tf-den

      # 3️⃣ Setup SSH key for EC2
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOYER_NEW }}" > ~/.ssh/deployer.pem
          chmod 600 ~/.ssh/deployer.pem
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      # 4️⃣ Install Terraform & Ansible
      - name: Install Terraform & Ansible
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip curl software-properties-common
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt-get install -y ansible
          curl -fsSL https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip -o terraform.zip
          sudo unzip -o terraform.zip -d /usr/local/bin/

      # 5️⃣ Initialize Terraform & get EC2 IP (✅ fixed)
      - name: Terraform Apply & Fetch IP
        id: tf
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          cd Tf-den/terraform_infra
          rm -rf .terraform .terraform.lock.hcl
          terraform init -reconfigure -input=false
          terraform apply -auto-approve
          terraform output -raw ec2_public_ip > ec2_ip.txt
          echo "EC2_IP=$(cat ec2_ip.txt)" >> $GITHUB_ENV
          echo "✅ Terraform EC2 IP: $(cat ec2_ip.txt)"

      # 6️⃣ Create inventory dynamically
      - name: Generate Inventory
        run: |
          echo "[all]" > inventory.ini
          echo "ec2-instance ansible_host=$EC2_IP ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/deployer.pem" >> inventory.ini
          echo "[all:vars]" >> inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          cat inventory.ini

      # 7️⃣ Test Ansible connection
      - name: Test SSH Connection
        run: |
          ansible all -i inventory.ini -m ping

      # 8️⃣ Run Ansible Playbooks
      - name: Run Ansible Playbooks
        env:
          CERT_PEM: ${{ secrets.CERT_PEM }}
          PRIVKEY_PEM: ${{ secrets.PRIVKEY_PEM }}
        run: |
          ansible-playbook -i inventory.ini Playbooks/install_dependencies.yml
          ansible-playbook -i inventory.ini Playbooks/configure_nginx.yml
          ansible-playbook -i inventory.ini Playbooks/deploy_containers.yml
          ansible-playbook -i inventory.ini Playbooks/env_and_ssl.yml
          ansible-playbook -i inventory.ini Playbooks/rolling_update.yml
          ansible-playbook -i inventory.ini Playbooks/setup_monitoring.yml
